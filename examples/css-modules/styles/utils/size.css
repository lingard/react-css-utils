@define-mixin utils-size-setup $namespace {
  /**
   * Specify the proportional width of an object.
   * Intentional redundancy build into each set of unit classes.
   * Supports: 2, 3, 4, 5, 6, 8, 10, 12 part
   *
   * 1. Use `flex-basis: auto` with a width to avoid box-sizing bug in IE10/11
   *    http://git.io/vllMD
   */
  .$(namespace)width-1-of-12 {
    width: calc(100% * 1 / 12) !important;
    flex-basis: auto !important; /* 1 */
  }

  .$(namespace)width-1-of-10 {
    width: 10% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-1-of-8 {
    width: 12.5% !important;
    flex-basis: auto !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-1-of-6,
  .$(namespace)width-2-of-12 {
    width: calc(100% * 1 / 6) !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-1-of-5,
  .$(namespace)width-2-of-10 {
    width: 20% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-1-of-4,
  .$(namespace)width-2-of-8,
  .$(namespace)width-3-of-12 {
    width: 25% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-3-of-10 {
    width: 30% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-1-of-3,
  .$(namespace)width-2-of-6,
  .$(namespace)width-4-of-12 {
    width: calc(100% * 1 / 3) !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-3-of-8 {
    width: 37.5% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-2-of-5,
  .$(namespace)width-4-of-10 {
    width: 40% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-5-of-12 {
    width: calc(100% * 5 / 12) !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-1-of-2,
  .$(namespace)width-2-of-4,
  .$(namespace)width-3-of-6,
  .$(namespace)width-4-of-8,
  .$(namespace)width-5-of-10,
  .$(namespace)width-6-of-12 {
    width: 50% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-7-of-12 {
    width: calc(100% * 7 / 12) !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-3-of-5,
  .$(namespace)width-6-of-10 {
    width: 60% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-5-of-8 {
    width: 62.5% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-2-of-3,
  .$(namespace)width-4-of-6,
  .$(namespace)width-8-of-12 {
    width: calc(100% * 2 / 3) !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-7-of-10 {
    width: 70% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-3-of-4,
  .$(namespace)width-6-of-8,
  .$(namespace)width-9-of-12 {
    width: 75% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-4-of-5,
  .$(namespace)width-8-of-10 {
    width: 80% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-5-of-6,
  .$(namespace)width-1-0o-f12 {
    width: calc(100% * 5 / 6) !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-7-of-8 {
    width: 87.5% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-9-of-10 {
    width: 90% !important;
    flex-basis: auto !important;
  }

  .$(namespace)width-1-1o-f12 {
    width: calc(100% * 11 / 12) !important;
    flex-basis: auto !important;
  }

  /* Intrinsic widths
     ========================================================================== */

  /**
   * Make an element fill the remaining space.
   *
   * 1. Be explicit to work around IE10 bug with shorthand flex - http://git.io/vllC7
   * 2. IE10 ignores previous `flex-basis` value. Setting again here fixes - http://git.io/vllMt
   */
  .$(namespace)fill {
    flex: 1 1 0% !important; /* 1 */
    flex-basis: 0% !important; /* 2 */
    height: 100%;
  }

  /**
   * An alternative method to make an element fill the remaining space.
   * Distributes space based on the initial width and height of the element
   *
   * http://www.w3.org/TR/css-flexbox/images/rel-vs-abs-flex.svg
   */
  .$(namespace)fill-alt {
    flex: 1 1 auto !important;
    flex-basis: auto !important;
  }

  /**
   * Make an element the width of its parent.
   */
  .$(namespace)full {
    box-sizing: border-box !important;
    display: block !important;
    width: 100% !important;
  }

  /**
   * Make an element the height of its parent.
   */
  .$(namespace)fill-height {
    height: 100%;
  }
}

:root {
  @mixin utils-size-setup;
}

@media (--palm) {
  :root {
    @mixin utils-size-setup palm-;
  }
}

@media (--lap) {
  :root {
    @mixin utils-size-setup lap-;
  }
}

@media (--desk) {
  :root {
    @mixin utils-size-setup desk-;
  }
}
